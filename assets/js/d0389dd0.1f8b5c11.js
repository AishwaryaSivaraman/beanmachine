"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7824],{3905:function(e,n,t){t.r(n),t.d(n,{MDXContext:function(){return s},MDXProvider:function(){return c},mdx:function(){return h},useMDXComponents:function(){return p},withMDXComponents:function(){return d}});var a=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(){return r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e},r.apply(this,arguments)}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function m(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=a.createContext({}),d=function(e){return function(n){var t=p(n.components);return a.createElement(e,r({},n,{components:t}))}},p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},f=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,s=m(e,["components","mdxType","originalType","parentName"]),d=p(t),c=i,f=d["".concat(o,".").concat(c)]||d[c]||u[c]||r;return t?a.createElement(f,l(l({ref:n},s),{},{components:t})):a.createElement(f,l({ref:n},s))}));function h(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,o=new Array(r);o[0]=f;var l={};for(var m in n)hasOwnProperty.call(n,m)&&(l[m]=n[m]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var s=2;s<r;s++)o[s]=t[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}f.displayName="MDXCreateElement"},37670:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return m},contentTitle:function(){return s},metadata:function(){return d},toc:function(){return p},default:function(){return f}});var a,i=t(87462),r=t(63366),o=(t(67294),t(3905)),l=["components"],m={id:"beanstalk",title:"The Beanstalk Compiler",sidebar_label:"Compiler"},s=void 0,d={unversionedId:"overview/beanstalk/beanstalk",id:"overview/beanstalk/beanstalk",isDocsHomePage:!1,title:"The Beanstalk Compiler",description:"What is Beanstalk?",source:"@site/../docs/overview/beanstalk/beanstalk.md",sourceDirName:"overview/beanstalk",slug:"/overview/beanstalk/beanstalk",permalink:"/docs/overview/beanstalk/beanstalk",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/../docs/overview/beanstalk/beanstalk.md",tags:[],version:"current",frontMatter:{id:"beanstalk",title:"The Beanstalk Compiler",sidebar_label:"Compiler"},sidebar:"someSidebar",previous:{title:"C++ Runtime",permalink:"/docs/overview/bmg/bmg"},next:{title:"Notebooks",permalink:"/docs/tutorials"}},p=[{value:"What is Beanstalk?",id:"what-is-beanstalk",children:[],level:3},{value:"Model restrictions",id:"model-restrictions",children:[],level:3},{value:"Getting started with Beanstalk",id:"getting-started-with-beanstalk",children:[],level:3}],c=(a="FbInternalOnly",function(e){return console.warn("Component "+a+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.mdx)("div",e)}),u={toc:p};function f(e){var n=e.components,t=(0,r.Z)(e,l);return(0,o.mdx)("wrapper",(0,i.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.mdx)("h3",{id:"what-is-beanstalk"},"What is Beanstalk?"),(0,o.mdx)("p",null,"Beanstalk is an experimental compiler under active development: it transforms models written in Bean Machine into an optimized ",(0,o.mdx)("a",{parentName:"p",href:"/docs/overview/bmg/bmg"},"Bean Machine Graph (BMG) C++ Runtime"),' model.\nIt is designed specifically to handle "unvectorized" models where stochastic quantities are\ntensors which contain exactly one value; we can often obtain significant performance improvements\nover Bean Machine  when using BMG to run inference on such models.'),(0,o.mdx)("p",null,"The tutorials currently working with Beanstalk are:"),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},"Linear regression"),(0,o.mdx)("li",{parentName:"ul"},"Gaussian mixture model"),(0,o.mdx)("li",{parentName:"ul"},"Neal's funnel")),(0,o.mdx)("p",null,"For the above three models, the Beanstalk-compiled version of NMC inference reduces runtime to generate samples of size 10K for the posterior distribution by anywhere between 80x and 250x depending on the model."),(0,o.mdx)("h3",{id:"model-restrictions"},"Model restrictions"),(0,o.mdx)("p",null,"Models compiled with Beanstalk have many restrictions. In the current release:"),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},"With some exceptions, all tensor quantities manipulated by the model must be single-valued. There is\nsome limited support for one- and two-dimensional tensors."),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"@random_variable")," functions must return a univariate ",(0,o.mdx)("inlineCode",{parentName:"li"},"Bernoulli"),", ",(0,o.mdx)("inlineCode",{parentName:"li"},"Beta"),", ",(0,o.mdx)("inlineCode",{parentName:"li"},"Binomial"),", ",(0,o.mdx)("inlineCode",{parentName:"li"},"Categorical"),",\n",(0,o.mdx)("inlineCode",{parentName:"li"},"Chi2"),", ",(0,o.mdx)("inlineCode",{parentName:"li"},"Dirichlet"),", ",(0,o.mdx)("inlineCode",{parentName:"li"},"Gamma"),", ",(0,o.mdx)("inlineCode",{parentName:"li"},"HalfCauchy"),", ",(0,o.mdx)("inlineCode",{parentName:"li"},"HalfNormal"),", ",(0,o.mdx)("inlineCode",{parentName:"li"},"Normal"),", ",(0,o.mdx)("inlineCode",{parentName:"li"},"StudentT")," or ",(0,o.mdx)("inlineCode",{parentName:"li"},"Uniform(0., 1.)"),"\ndistribution."),(0,o.mdx)("li",{parentName:"ul"},"Tensor operators on stochastic values are limited to ",(0,o.mdx)("inlineCode",{parentName:"li"},"add()"),", ",(0,o.mdx)("inlineCode",{parentName:"li"},"div()"),", ",(0,o.mdx)("inlineCode",{parentName:"li"},"exp()"),", ",(0,o.mdx)("inlineCode",{parentName:"li"},"expm1()"),",\n",(0,o.mdx)("inlineCode",{parentName:"li"},"item()"),", ",(0,o.mdx)("inlineCode",{parentName:"li"},"log()"),", ",(0,o.mdx)("inlineCode",{parentName:"li"},"logsumexp()"),", ",(0,o.mdx)("inlineCode",{parentName:"li"},"mul()"),", ",(0,o.mdx)("inlineCode",{parentName:"li"},"neg()"),", ",(0,o.mdx)("inlineCode",{parentName:"li"},"pow()"),", ",(0,o.mdx)("inlineCode",{parentName:"li"},"sigmoid()")," and ",(0,o.mdx)("inlineCode",{parentName:"li"},"sub()"),"."),(0,o.mdx)("li",{parentName:"ul"},"Python operators on stochastic values in ",(0,o.mdx)("inlineCode",{parentName:"li"},"@random_variable")," or ",(0,o.mdx)("inlineCode",{parentName:"li"},"@functional")," functions are limited to\n",(0,o.mdx)("inlineCode",{parentName:"li"},"+"),", ",(0,o.mdx)("inlineCode",{parentName:"li"},"-"),", ",(0,o.mdx)("inlineCode",{parentName:"li"},"*"),", ",(0,o.mdx)("inlineCode",{parentName:"li"},"/"),", and ",(0,o.mdx)("inlineCode",{parentName:"li"},"**")," operators. Matrix multiplication and comparisons are not yet supported."),(0,o.mdx)("li",{parentName:"ul"},"Support for the ",(0,o.mdx)("inlineCode",{parentName:"li"},"[]")," indexing operation is limited."),(0,o.mdx)("li",{parentName:"ul"},'Support for "destructuring" assignments such as ',(0,o.mdx)("inlineCode",{parentName:"li"},"x, y = z")," where ",(0,o.mdx)("inlineCode",{parentName:"li"},"z")," is a stochastic quantity is limited."),(0,o.mdx)("li",{parentName:"ul"},"All ",(0,o.mdx)("inlineCode",{parentName:"li"},"@random_variable")," and ",(0,o.mdx)("inlineCode",{parentName:"li"},"@functional")," functions in the model ",(0,o.mdx)("em",{parentName:"li"},"and every function called by them"),'\nmust be "pure". That is, the value returned must be logically identical every time the function is\ncalled with the same arguments, and the function must not modify any externally-observable state.'),(0,o.mdx)("li",{parentName:"ul"},'Models must not mutate existing tensors "in place"; always create new values rather than mutating\nexisting tensors.'),(0,o.mdx)("li",{parentName:"ul"},"Conditions of ",(0,o.mdx)("inlineCode",{parentName:"li"},"while")," statements, ",(0,o.mdx)("inlineCode",{parentName:"li"},"if")," statements, and ",(0,o.mdx)("inlineCode",{parentName:"li"},"if")," expressions must not be stochastic.")),(0,o.mdx)("h3",{id:"getting-started-with-beanstalk"},"Getting started with Beanstalk"),(0,o.mdx)("p",null,"To use Beanstalk to run Bean Machine Graph inference on a Bean Machine model, first import the inference engine. For example: ",(0,o.mdx)("inlineCode",{parentName:"p"},"from beanmachine.ppl.inference.bmg_inference import BMGInference"),"."),(0,o.mdx)("p",null,"The ",(0,o.mdx)("inlineCode",{parentName:"p"},"BMGInference()")," object provides the following methods to inspect the compiler's analysis and produce code that generates a Bean Machine Graph model:"),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("p",{parentName:"li"},(0,o.mdx)("inlineCode",{parentName:"p"},"BMGInference().infer(queries, observations, num_samples, num_chains)")," - Compiles the model and executes\ninference using Bean Machine Graph; returns a dictionary of samples for the queried variables. In the current\nrelease only Newtonian Monte Carlo (NMC) is supported when running inference with ",(0,o.mdx)("inlineCode",{parentName:"p"},"BMGInference"),".")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("p",{parentName:"li"},(0,o.mdx)("inlineCode",{parentName:"p"},"BMGInference().to_cpp(queries, observations)")," - Returns a C++ program fragment that constructs the equivalent\nBMG model.")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("p",{parentName:"li"},(0,o.mdx)("inlineCode",{parentName:"p"},"BMGInference().to_python(queries, observations)")," - Returns a Python program that constructs the equivalent\nBMG model.")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("p",{parentName:"li"},(0,o.mdx)("inlineCode",{parentName:"p"},"BMGInference().to_graphviz(queries, observations)")," - Returns a graphviz graph representing the model.")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("p",{parentName:"li"},(0,o.mdx)("inlineCode",{parentName:"p"},"BMGInference().to_dot(queries, observations)")," - Returns the DOT source code of the graphviz graph."))),(0,o.mdx)(c,{mdxType:"FbInternalOnly"},(0,o.mdx)("p",null,"Facebook specific:"),(0,o.mdx)("p",null," These models are also frequently used at Facebook including Team Power and Metric Ranking products (",(0,o.mdx)("a",{parentName:"p",href:"https://fb.workplace.com/notes/418250526036381"},"https://fb.workplace.com/notes/418250526036381"),") as well as new pilot studies on ",(0,o.mdx)("a",{parentName:"p",href:"https://fb.quip.com/GxwQAIscFRz8"},"https://fb.quip.com/GxwQAIscFRz8")," and ",(0,o.mdx)("a",{parentName:"p",href:"https://fb.quip.com/UMmcAr2zczbc"},"https://fb.quip.com/UMmcAr2zczbc"),". Additionally, the Probabilistic Programming Languages (",(0,o.mdx)("a",{parentName:"p",href:"https://www.internalfb.com/intern/bunny/?q=group%20pplxfn"},"https://www.internalfb.com/intern/bunny/?q=group%20pplxfn"),") (PPL) team has collected a list of ",(0,o.mdx)("a",{parentName:"p",href:"https://fb.quip.com/rrMAAuk02Jqa"},"https://fb.quip.com/rrMAAuk02Jqa")," who can benefit from our HME methodology."),(0,o.mdx)("p",null,"BMG: ",(0,o.mdx)("a",{parentName:"p",href:"https://fb.quip.com/TDA7AIjRmScW"},"https://fb.quip.com/TDA7AIjRmScW"))))}f.isMDXComponent=!0}}]);