"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4268],{3905:function(e,t,n){n.r(t),n.d(t,{MDXContext:function(){return m},MDXProvider:function(){return s},mdx:function(){return h},useMDXComponents:function(){return g},withMDXComponents:function(){return p}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(){return l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},l.apply(this,arguments)}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var m=r.createContext({}),p=function(e){return function(t){var n=g(t.components);return r.createElement(e,l({},t,{components:n}))}},g=function(e){var t=r.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=g(e.components);return r.createElement(m.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,m=d(e,["components","mdxType","originalType","parentName"]),p=g(n),s=a,c=p["".concat(o,".").concat(s)]||p[s]||u[s]||l;return n?r.createElement(c,i(i({ref:t},m),{},{components:n})):r.createElement(c,i({ref:t},m))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=c;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var m=2;m<l;m++)o[m]=n[m];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},48505:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return d},metadata:function(){return m},toc:function(){return p},default:function(){return s}});var r=n(87462),a=n(63366),l=(n(67294),n(3905)),o=["components"],i={},d="Logging",m={unversionedId:"framework_topics/development/logging",id:"framework_topics/development/logging",isDocsHomePage:!1,title:"Logging",description:"Logging in Bean Machine is provided through the logging module in Python. It is recommended that users get familiar with the basics (logger, handler, levels, etc.) of this module before reading further.",source:"@site/../docs/framework_topics/development/logging.md",sourceDirName:"framework_topics/development",slug:"/framework_topics/development/logging",permalink:"/docs/framework_topics/development/logging",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/../docs/framework_topics/development/logging.md",tags:[],version:"current",frontMatter:{}},p=[{value:"The Bean Machine Logger",id:"the-bean-machine-logger",children:[],level:2},{value:"Log Levels and Sub-loggers",id:"log-levels-and-sub-loggers",children:[],level:2},{value:"For Developers",id:"for-developers",children:[],level:2}],g={toc:p};function s(e){var t=e.components,n=(0,a.Z)(e,o);return(0,l.mdx)("wrapper",(0,r.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,l.mdx)("h1",{id:"logging"},"Logging"),(0,l.mdx)("p",null,"Logging in Bean Machine is provided through the ",(0,l.mdx)("a",{parentName:"p",href:"https://docs.python.org/3/howto/logging.html"},"logging")," module in Python. It is recommended that users get familiar with the basics (logger, handler, levels, etc.) of this module before reading further."),(0,l.mdx)("h2",{id:"the-bean-machine-logger"},"The Bean Machine Logger"),(0,l.mdx)("p",null,"Upon importing the beanmachine module, the base logger ",(0,l.mdx)("inlineCode",{parentName:"p"},'"beanmachine"')," is initialized with two handlers such that it saves every message at or above the ",(0,l.mdx)("inlineCode",{parentName:"p"},"WARNING")," level to a local file and prints every message at or above the ",(0,l.mdx)("inlineCode",{parentName:"p"},"INFO")," level to the console. Users could control the information to be logged by replacing the default handlers with customized ones."),(0,l.mdx)("h2",{id:"log-levels-and-sub-loggers"},"Log Levels and Sub-loggers"),(0,l.mdx)("p",null,"To keep sufficient flexibility and ease of use, Bean Machine provides multiple sub-loggers under the base logger ",(0,l.mdx)("inlineCode",{parentName:"p"},'"beanmachine"'),", such as ",(0,l.mdx)("inlineCode",{parentName:"p"},'"beanmachine.inference"'),", ",(0,l.mdx)("inlineCode",{parentName:"p"},'"beanmachine.proposer"'),", ",(0,l.mdx)("inlineCode",{parentName:"p"},'"beanmachine.world"'),", etc. The name of the sub-logger indicates where the message is generated. Following the convention of Python ",(0,l.mdx)("a",{parentName:"p",href:"https://docs.python.org/3/howto/logging.html"},"logging"),", users could modify the logging levels of the base or sub-loggers as they need. Experienced users could also create customized filters based on the message itself."),(0,l.mdx)("p",null,"In Bean Machine, we also offer a ",(0,l.mdx)("inlineCode",{parentName:"p"},"LogLevel")," class that maps the level name to its numeric value. The mapping is consistent with the ",(0,l.mdx)("inlineCode",{parentName:"p"},"logging")," module with additional levels inserted between ",(0,l.mdx)("inlineCode",{parentName:"p"},"INFO")," and ",(0,l.mdx)("inlineCode",{parentName:"p"},"DEBUG")," to differentiate different priorities in debugging. The following table provides the level description in details."),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"Level Name"),(0,l.mdx)("th",{parentName:"tr",align:null},"Numric Value"),(0,l.mdx)("th",{parentName:"tr",align:null},"Type of Information to Log"))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"ERROR"),(0,l.mdx)("td",{parentName:"tr",align:null},"40"),(0,l.mdx)("td",{parentName:"tr",align:null},"Exceptions that are caught and handled with alternative solutions.")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"WARNING"),(0,l.mdx)("td",{parentName:"tr",align:null},"30"),(0,l.mdx)("td",{parentName:"tr",align:null},"Gradient calculation returns NaN or Inf.")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null},"Falling back to other proposer.")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"INFO"),(0,l.mdx)("td",{parentName:"tr",align:null},"20"),(0,l.mdx)("td",{parentName:"tr",align:null},"User-provided messages.")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"DEBUG_UPDATES"),(0,l.mdx)("td",{parentName:"tr",align:null},"16"),(0,l.mdx)("td",{parentName:"tr",align:null},"Node name and value")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null},"Proposed value")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null},"Proposal log update")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null},"Children log update")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null},"Node log update")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null},"Accept/Reject")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null},"Proposer type")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null},"Proposer properties")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null},"Step size")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null},"The dependency graph of random variables")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"DEBUG"),(0,l.mdx)("td",{parentName:"tr",align:null},"10"),(0,l.mdx)("td",{parentName:"tr",align:null},"All logging messages")))),(0,l.mdx)("p",null,"The level ",(0,l.mdx)("inlineCode",{parentName:"p"},"INFO")," is reserved for users who would like to ",(0,l.mdx)("strong",{parentName:"p"},"print")," any information from their model."),(0,l.mdx)("h2",{id:"for-developers"},"For Developers"),(0,l.mdx)("p",null,"Developers are welcome to add additional loggings following the above pattern. e.g. When a new proposer is added, its associated information should use the ",(0,l.mdx)("inlineCode",{parentName:"p"},'"beanmachine.proposer"')," logger. If a new logging level must be added, please set the level (",(0,l.mdx)("inlineCode",{parentName:"p"},"LogLevel")," class) based on the type of information and the expected frequency of use (higher frequency -> higher level), and update the above table."))}s.isMDXComponent=!0}}]);